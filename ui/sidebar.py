# ui/sidebar.py
import streamlit as st
from core.utils import get_lang_mappings

def sidebar_content():
    """Generuje zawarto≈õƒá bocznego panelu Streamlit z niestandardowym stylem"""

    # Stylowany tytu≈Ç sidebaru
    st.sidebar.markdown(
        """
        <div style='
            font-size: 34px;
            font-weight: 700;
            color: #4F8BF9;
            margin-bottom: 0px;
        '>üìã Szybkie Menu</div>
        """,
        unsafe_allow_html=True
    )

    # Stylowane etykiety przycisk√≥w
    st.sidebar.markdown(
        """
        <style>
        .sidebar-radio label {
            font-size: 18px !important;
            margin-bottom: 5px;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    # Opakowanie radio w dodatkowy znacznik klasy (dla CSS powy≈ºej)
    menu = st.sidebar.radio(
        " ",
        ["Historia t≈Çumacze≈Ñ", "S≈Ç√≥wka", "Wyszukaj s≈Ç√≥wka"],
        key="menu_radio"
    )

    # Pobieranie mapowa≈Ñ jƒôzyk√≥w
    lang_mapping, lang_mapping2, lang_mapping3 = get_lang_mappings()

    if menu == "Historia t≈Çumacze≈Ñ":
        display_translation_history(lang_mapping)
    elif menu == "S≈Ç√≥wka":
        display_vocabulary()
    elif menu == "Wyszukaj s≈Ç√≥wka":
        search_vocabulary()

def display_translation_history(lang_mapping, limit=None):
    """Wy≈õwietla historiƒô t≈Çumacze≈Ñ z mo≈ºliwo≈õciƒÖ zmiany limitu"""
    db = st.session_state.db
    
    # Dodajemy suwak do zmiany limitu wy≈õwietlanych t≈Çumacze≈Ñ
    if limit is None:
        limit = st.sidebar.slider("Liczba t≈Çumacze≈Ñ do wy≈õwietlenia", min_value=1, max_value=50, value=5)

    history = db.get_translation_history(limit=limit)
    
    if history:
        for entry in history:
            st.sidebar.write(f"{entry[1]} ‚Üí {entry[2]} ({entry[3]} ‚Üí {entry[4]})")
    else:
        st.sidebar.info("Brak historii t≈Çumacze≈Ñ.")

def display_vocabulary():
    """Wy≈õwietla s≈Ç√≥wka"""
    db = st.session_state.db
    vocabulary = db.get_vocabulary()
    if vocabulary:
        for entry in vocabulary:
            st.sidebar.write(f"{entry[1]} ‚Üí {entry[2]} ({entry[3]})")
    else:
        st.sidebar.info("Brak s≈Ç√≥wek.")

def search_vocabulary():
    """Generuje wyszukiwanie s≈Ç√≥wek"""
    st.sidebar.subheader("Wyszukaj s≈Ç√≥wko")
    query = st.sidebar.text_input("Wpisz s≈Çowo lub t≈Çumaczenie", key="search_input")

    if query:
        db = st.session_state.db
        results = db.search_vocabulary(query)
        if results:
            for _, word, translation, lang in results:
                st.sidebar.write(f"**{word}** ‚Üí {translation} ({lang})")
        else:
            st.sidebar.info("Brak wynik√≥w.")
